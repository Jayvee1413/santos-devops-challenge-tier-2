{
  "Resources": {
    "JVSANTOSTier2VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "0",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1"
        }
      }
    },
    "JVSANTOSTier2VPCPublicSubnet1DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "JVSANTOSTier2VPCIGW"
        }
      },
      "DependsOn": [
        "JVSANTOSTier2VPCVPCGW"
      ]
    },
    "JVSANTOSTier2VPCPublicSubnet1EIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet1NATGateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "JVSANTOSTier2VPCPublicSubnet1EIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.16.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "1",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet2"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet2"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet2"
        }
      }
    },
    "JVSANTOSTier2VPCPublicSubnet2DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet2RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "JVSANTOSTier2VPCIGW"
        }
      },
      "DependsOn": [
        "JVSANTOSTier2VPCVPCGW"
      ]
    },
    "JVSANTOSTier2VPCPublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.32.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "2",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet3"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PublicSubnet3"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPublicSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet3"
        }
      }
    },
    "JVSANTOSTier2VPCPublicSubnet3DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet3RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "JVSANTOSTier2VPCIGW"
        }
      },
      "DependsOn": [
        "JVSANTOSTier2VPCVPCGW"
      ]
    },
    "JVSANTOSTier2VPCIsolatedSubnet1Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.48.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "0",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/IsolatedSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/IsolatedSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet1Subnet"
        }
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet2Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "1",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/IsolatedSubnet2"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/IsolatedSubnet2"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet2Subnet"
        }
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet3Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.80.0/20",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "2",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/IsolatedSubnet3"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/IsolatedSubnet3"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCIsolatedSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet3Subnet"
        }
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.96.0/19",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "0",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PrivateSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PrivateSubnet1"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet1"
        }
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet1DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet1RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1NATGateway"
        }
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/19",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "1",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PrivateSubnet2"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PrivateSubnet2"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet2"
        }
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet2DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet2RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1NATGateway"
        }
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.160.0/19",
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "AvailabilityZone": {
            "Fn::Select" : [
              "2",
              {
                "Fn::GetAZs" : ""
              }
            ]
          },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PrivateSubnet3"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC/PrivateSubnet3"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet3"
        }
      }
    },
    "JVSANTOSTier2VPCPrivateSubnet3DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet3RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1NATGateway"
        }
      }
    },
    "JVSANTOSTier2VPCIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "JVSANTOSTier2AwsArchitectureStack/Tier2VPC"
          }
        ]
      }
    },
    "JVSANTOSTier2VPCVPCGW": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "InternetGatewayId": {
          "Ref": "JVSANTOSTier2VPCIGW"
        }
      }
    },
    "publicnetworkacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ]
      }
    },
    "publicnaclhttpportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 80,
          "To": 80
        }
      }
    },
    "publicnaclhttpsportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      }
    },
    "publicnaclsshportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "DENY",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 22,
          "To": 22
        }
      }
    },
    "publicnaclephemeralportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 230,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      }
    },
    "publicnaclhttpportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 80,
          "To": 80
        }
      }
    },
    "publicnaclhttpsportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      }
    },
    "publicnaclephemeralportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      }
    },
    "publicnaclsshportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 230,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 22,
          "To": 22
        }
      }
    },
    "publicnaclsubnetassoc0": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet1"
        }
      }
    },
    "publicnaclsubnetassoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet2"
        }
      }
    },
    "publicnaclsubnetassoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "publicnetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPublicSubnet3"
        }
      }
    },
    "privatenetworkacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ]
      }
    },
    "privatenaclallportinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": {
          "Fn::GetAtt": [
            "JVSANTOSTier2VPC",
            "CidrBlock"
          ]
        },
        "Egress": false,
        "PortRange": {
          "From": 0,
          "To": 65535
        }
      }
    },
    "privatenaclallportoutsideinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      }
    },
    "privatenaclhttpsportoutsideinbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": false,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      }
    },
    "privatenaclallportoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 200,
        "CidrBlock": {
          "Fn::GetAtt": [
            "JVSANTOSTier2VPC",
            "CidrBlock"
          ]
        },
        "Egress": true,
        "PortRange": {
          "From": 0,
          "To": 65535
        }
      }
    },
    "privatenaclallportoutsideoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "Protocol": -1,
        "RuleAction": "ALLOW",
        "RuleNumber": 210,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 0,
          "To": 65535
        }
      }
    },
    "privatenaclhttpsportoutsideoutbound": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 220,
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "PortRange": {
          "From": 443,
          "To": 443
        }
      }
    },
    "privatenaclsubnetassoc0": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet1"
        }
      }
    },
    "privatenaclsubnetassoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet2"
        }
      }
    },
    "privatenaclsubnetassoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "privatenetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCPrivateSubnet3"
        }
      }
    },
    "isolatednetworkacl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ]
      }
    },
    "isolatednaclrdsportinbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 100,
        "CidrBlock": "10.0.96.0/19",
        "Egress": false,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      }
    },
    "isolatednaclrdsportoutbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 100,
        "CidrBlock": "10.0.96.0/19",
        "Egress": true,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      }
    },
    "isolatednaclephemeralportoutbound1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 110,
        "CidrBlock": "10.0.96.0/19",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      }
    },
    "isolatednaclrdsportinbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 110,
        "CidrBlock": "10.0.128.0/19",
        "Egress": false,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      }
    },
    "isolatednaclrdsportoutbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 120,
        "CidrBlock": "10.0.128.0/19",
        "Egress": true,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      }
    },
    "isolatednaclephemeralportoutbound2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 130,
        "CidrBlock": "10.0.128.0/19",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      }
    },
    "isolatednaclrdsportinbound3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 120,
        "CidrBlock": "10.0.160.0/19",
        "Egress": false,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      }
    },
    "isolatednaclrdsportoutbound3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 140,
        "CidrBlock": "10.0.160.0/19",
        "Egress": true,
        "PortRange": {
          "From": 3306,
          "To": 3306
        }
      }
    },
    "isolatednaclephemeralportoutbound3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "Protocol": 6,
        "RuleAction": "ALLOW",
        "RuleNumber": 150,
        "CidrBlock": "10.0.160.0/19",
        "Egress": true,
        "PortRange": {
          "From": 1024,
          "To": 65535
        }
      }
    },
    "isolatednaclsubnetassoc0": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet1Subnet"
        }
      }
    },
    "isolatednaclsubnetassoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet2Subnet"
        }
      }
    },
    "isolatednaclsubnetassoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "isolatednetworkacl"
        },
        "SubnetId": {
          "Ref": "JVSANTOSTier2VPCIsolatedSubnet3Subnet"
        }
      }
    },
    "CodeStarConnection": {
      "Type": "AWS::CodeStarConnections::Connection",
      "Properties": {
        "ConnectionName": "jvsantostier2",
        "ProviderType": "GitHub",
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ]
      }
    },
    "JVSANTOSApplicationLoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Application Load Balancer Security Group",
        "GroupName": "ApplicationLoadBalancerSG",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow HTTPS from outside",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ApplicationLoadBalancerSG"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        }
      }
    },
    "JVSANTOSApplicationSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": " Application Security Group",
        "GroupName": "ApplicationSG",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Outbound Rule for VPC",
            "FromPort": 1024,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Inbound Rule for VPC",
            "FromPort": 1024,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ApplicationSG"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        }
      }
    },
    "JVSANTOSApplicationSGHTTPSfromJVSANTOSTier2AwsArchitectureStackApplicationLoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Allow HTTPS from load balancer",
        "FromPort": 443,
        "GroupId": {
          "Fn::GetAtt": [
            "JVSANTOSApplicationSG",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JVSANTOSApplicationLoadBalancerSG",
            "GroupId"
          ]
        },
        "ToPort": 443
      }
    },
    "JVSANTOSApplicationSGHTTPfromJVSANTOSTier2AwsArchitectureStackApplicationLoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Allow HTTP from load balancer",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "JVSANTOSApplicationSG",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "JVSANTOSApplicationLoadBalancerSG",
            "GroupId"
          ]
        },
        "ToPort": 80
      }
    },
    "JVSANTOSRDSSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "RDS MySQL Security Group",
        "GroupName": "RDSSG",
        "SecurityGroupEgress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "JVSANTOSTier2VPC",
                "CidrBlock"
              ]
            },
            "Description": "Outbound Rule for VPC",
            "FromPort": 1024,
            "IpProtocol": "tcp",
            "ToPort": 65535
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": {
              "Fn::GetAtt": [
                "JVSANTOSTier2VPC",
                "CidrBlock"
              ]
            },
            "Description": "Allow MySQL from app",
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "RDSSG"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        }
      }
    },
    "JVSANTOSTier2RDSSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": {
          "Fn::Join": [
            "",
            [
              "Generated by the CDK for stack: ",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        },
        "GenerateSecretString": {
          "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\"username\":\"tier2user\"}"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ]
      }
    },
    "JVSANTOSTier2RDSSecretAttachment": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "JVSANTOSTier2RDSSecret"
        },
        "TargetId": {
          "Ref": "JVSANTOSTier2RDS"
        },
        "TargetType": "AWS::RDS::DBInstance"
      }
    },
    "JVSANTOSTier2RDSSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for Tier2RDS database",
        "SubnetIds": [
          {
            "Ref": "JVSANTOSTier2VPCIsolatedSubnet1Subnet"
          },
          {
            "Ref": "JVSANTOSTier2VPCIsolatedSubnet2Subnet"
          },
          {
            "Ref": "JVSANTOSTier2VPCIsolatedSubnet3Subnet"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ]
      }
    },
    "JVSANTOSTier2RDS": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t3.micro",
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBInstanceIdentifier": "jvsantostier2rds",
        "DBName": "tier2",
        "DBSubnetGroupName": {
          "Ref": "JVSANTOSTier2RDSSubnetGroup"
        },
        "DeletionProtection": false,
        "Engine": "mysql",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "JVSANTOSTier2RDSSecret"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "JVSANTOSTier2RDSSecret"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "MultiAZ": true,
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ],
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "JVSANTOSRDSSG",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "JVSANTOSTier2ACMCertificate": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": "jvsantos-tier2.apperdevops.com",
        "DomainValidationOptions": [
          {
            "DomainName": "jvsantos-tier2.apperdevops.com",
            "HostedZoneId": "Z04135332RXQPQVNH7G61"
          }
        ],
        "SubjectAlternativeNames": [
          "*.jvsantos-tier2.apperdevops.com"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ],
        "ValidationMethod": "DNS"
      }
    },
    "JVSANTOSECSLB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "LoadBalancerAttributes": [
          {
            "Key": "deletion_protection.enabled",
            "Value": "false"
          }
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "JVSANTOSECSLBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "JVSANTOSTier2VPCPublicSubnet1"
          },
          {
            "Ref": "JVSANTOSTier2VPCPublicSubnet2"
          },
          {
            "Ref": "JVSANTOSTier2VPCPublicSubnet3"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "JVSANTOSTier2VPCPublicSubnet1DefaultRoute",
        "JVSANTOSTier2VPCPublicSubnet2DefaultRoute",
        "JVSANTOSTier2VPCPublicSubnet3DefaultRoute"
      ]
    },
    "JVSANTOSECSLBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB JVSANTOSTier2AwsArchitectureStackLB10579ADD",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "jvsantos.tier2"
          }
        ],
        "VpcId": {
          "Ref": "JVSANTOSTier2VPC"
        }
      }
    }
  },
  "Outputs": {
    "OutputJVSANTOSTier2VPCPublicSubnet1": {
      "Value": {
        "Ref": "JVSANTOSTier2VPCPublicSubnet1"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCPublicSubnet1"
      }
    },
    "OutputJVSANTOSTier2VPCPublicSubnet2": {
      "Value": {
        "Ref": "JVSANTOSTier2VPCPublicSubnet2"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCPublicSubnet2"
      }
    },
    "OutputJVSANTOSTier2VPCPublicSubnet3": {
      "Value": {
        "Ref": "JVSANTOSTier2VPCPublicSubnet3"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCPublicSubnet3"
      }
    },
    "OutputJVSANTOSTier2VPC": {
      "Value": {
        "Ref": "JVSANTOSTier2VPC"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPC"
      }
    },
    "OutputJVSANTOSTier2ACMCertificate": {
      "Value": {
        "Ref": "JVSANTOSTier2ACMCertificate"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2ACMCertificate"
      }
    },
    "OutputJVSANTOSTier2VPCPrivateSubnet1": {
      "Value": {
        "Ref": "JVSANTOSTier2VPCPrivateSubnet1"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCPrivateSubnet1"
      }
    },
    "OutputJVSANTOSTier2VPCPrivateSubnet2": {
      "Value": {
        "Ref": "JVSANTOSTier2VPCPrivateSubnet2"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCPrivateSubnet2"
      }
    },
    "OutputJVSANTOSTier2VPCPrivateSubnet3": {
      "Value": {
        "Ref": "JVSANTOSTier2VPCPrivateSubnet3"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCPrivateSubnet3"
      }
    },
    "OutputJVSANTOSTier2VPCCidrBlock": {
      "Value": {
        "Fn::GetAtt": [
          "JVSANTOSTier2VPC",
          "CidrBlock"
        ]
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2VPCCidrBlock"
      }
    },
    "OutputJVSANTOSTier2RDSSecret": {
      "Value": {
        "Ref": "JVSANTOSTier2RDSSecret"
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputJVSANTOSTier2RDSSecret"
      }
    },
    "OutputCodeStarConnectionConnectionArn": {
      "Value": {
        "Fn::GetAtt": [
          "CodeStarConnection",
          "ConnectionArn"
        ]
      },
      "Export": {
        "Name": "JVSANTOSTier2AwsArchitectureStack:OutputCodeStarConnectionConnectionArn"
      }
    }
  }
}